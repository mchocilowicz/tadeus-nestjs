import { MigrationInterface, QueryRunner } from "typeorm";

export class RefactorUserAccountMechanism1568490371268 implements MigrationInterface {

    public async up(queryRunner: QueryRunner): Promise<any> {
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_31307c270942a4468b1ac85cc49"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_ba24fca234735238d1628dfa6c2"`);
        await queryRunner.query(`ALTER TABLE "transaction" RENAME COLUMN "terminalID" TO "terminalId"`);
        await queryRunner.query(`CREATE TABLE "user_details" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "xp" integer NOT NULL DEFAULT 0, "fullName" character varying, "bankAccount" integer, "collectedMoney" numeric NOT NULL DEFAULT 0, "ngoTempMoney" numeric NOT NULL DEFAULT 0, "ngoSelectionCount" integer NOT NULL DEFAULT 0, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "ngoId" uuid, CONSTRAINT "PK_fb08394d3f499b9e441cab9ca51" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "physical_card" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "ID" character varying NOT NULL, "code" uuid NOT NULL DEFAULT uuid_generate_v4(), "collectedMoney" numeric NOT NULL DEFAULT 0, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_64afb08d604a8c78a8cb52db9d9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "terminal" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "step" text, "tradingPointId" uuid, CONSTRAINT "PK_5404f9799fb761bd9b01070356a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "account" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "ID" character varying NOT NULL, "code" integer, "token" character varying, "status" text NOT NULL DEFAULT 'ACTIVE', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "roleId" uuid NOT NULL, "userId" uuid, CONSTRAINT "PK_54115ee388cdb6d86bb4bf5b2ea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "ngo" DROP COLUMN "creationDate"`);
        await queryRunner.query(`ALTER TABLE "ngo" DROP COLUMN "verificationDate"`);
        await queryRunner.query(`ALTER TABLE "virtual_card" DROP COLUMN "cardNumber"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "dashboardToken"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "terminalToken"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "dashboardCode"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "terminalCode"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "step"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "token"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "ID"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "terminalID"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "status"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "tradingPointId"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "ngoId"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "updatedDate"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "createdDate"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "ngoSelectionCount"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "personalPool"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "donationPool"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "xp"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "collectedMoney"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "code"`);
        await queryRunner.query(`ALTER TABLE "donation" ADD "isPaid" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "donation" ADD "payedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "ngo" ADD "verifiedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "ngo" ADD "creationAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "virtual_card" ADD "ID" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "virtual_card" ADD "donationPool" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "virtual_card" ADD "personalPool" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "virtual_card" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "virtual_card" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user" ADD "isAnonymous" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "user" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user" ADD "accountsId" uuid`);
        await queryRunner.query(`ALTER TABLE "user" ADD "terminalId" uuid`);
        await queryRunner.query(`ALTER TABLE "user" ADD "detailsId" uuid`);
        await queryRunner.query(`ALTER TABLE "cart" ALTER COLUMN "isPaid" SET DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP COLUMN "terminalId"`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD "terminalId" uuid`);
        await queryRunner.query(`ALTER TABLE "user" ALTER COLUMN "registered" SET DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "user_details" ADD CONSTRAINT "FK_877e44bf15f92d455d2a5a07f0a" FOREIGN KEY ("ngoId") REFERENCES "ngo"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "terminal" ADD CONSTRAINT "FK_ca913940b7d3ee620edf39401e6" FOREIGN KEY ("tradingPointId") REFERENCES "trading_point"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_71bf4f5ef5281da71e23ede3be3" FOREIGN KEY ("terminalId") REFERENCES "terminal"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_c6db777a4be2277bbee8cc546ff" FOREIGN KEY ("accountsId") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_0952b008e9d96ddca010d4e6503" FOREIGN KEY ("terminalId") REFERENCES "terminal"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_4c62c8388460a107d0f450f9e0c" FOREIGN KEY ("detailsId") REFERENCES "user_details"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_77bf26eef8865441fb9bd53a364" FOREIGN KEY ("roleId") REFERENCES "role"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_60328bf27019ff5498c4b977421" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<any> {
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_60328bf27019ff5498c4b977421"`);
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_77bf26eef8865441fb9bd53a364"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_4c62c8388460a107d0f450f9e0c"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_0952b008e9d96ddca010d4e6503"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_c6db777a4be2277bbee8cc546ff"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_71bf4f5ef5281da71e23ede3be3"`);
        await queryRunner.query(`ALTER TABLE "terminal" DROP CONSTRAINT "FK_ca913940b7d3ee620edf39401e6"`);
        await queryRunner.query(`ALTER TABLE "user_details" DROP CONSTRAINT "FK_877e44bf15f92d455d2a5a07f0a"`);
        await queryRunner.query(`ALTER TABLE "user" ALTER COLUMN "registered" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP COLUMN "terminalId"`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD "terminalId" character varying`);
        await queryRunner.query(`ALTER TABLE "cart" ALTER COLUMN "isPaid" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "detailsId"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "terminalId"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "accountsId"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "isAnonymous"`);
        await queryRunner.query(`ALTER TABLE "virtual_card" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "virtual_card" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "virtual_card" DROP COLUMN "personalPool"`);
        await queryRunner.query(`ALTER TABLE "virtual_card" DROP COLUMN "donationPool"`);
        await queryRunner.query(`ALTER TABLE "virtual_card" DROP COLUMN "ID"`);
        await queryRunner.query(`ALTER TABLE "ngo" DROP COLUMN "creationAt"`);
        await queryRunner.query(`ALTER TABLE "ngo" DROP COLUMN "verifiedAt"`);
        await queryRunner.query(`ALTER TABLE "donation" DROP COLUMN "payedAt"`);
        await queryRunner.query(`ALTER TABLE "donation" DROP COLUMN "isPaid"`);
        await queryRunner.query(`ALTER TABLE "user" ADD "code" integer`);
        await queryRunner.query(`ALTER TABLE "user" ADD "collectedMoney" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "xp" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "donationPool" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "personalPool" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "ngoSelectionCount" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "createdDate" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user" ADD "updatedDate" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user" ADD "ngoId" uuid`);
        await queryRunner.query(`ALTER TABLE "user" ADD "tradingPointId" uuid`);
        await queryRunner.query(`ALTER TABLE "user" ADD "status" text NOT NULL DEFAULT 'ACTIVE'`);
        await queryRunner.query(`ALTER TABLE "user" ADD "terminalID" character varying`);
        await queryRunner.query(`ALTER TABLE "user" ADD "ID" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "token" character varying`);
        await queryRunner.query(`ALTER TABLE "user" ADD "step" text`);
        await queryRunner.query(`ALTER TABLE "user" ADD "terminalCode" integer`);
        await queryRunner.query(`ALTER TABLE "user" ADD "dashboardCode" integer`);
        await queryRunner.query(`ALTER TABLE "user" ADD "terminalToken" character varying`);
        await queryRunner.query(`ALTER TABLE "user" ADD "dashboardToken" character varying`);
        await queryRunner.query(`ALTER TABLE "virtual_card" ADD "cardNumber" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "ngo" ADD "verificationDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "ngo" ADD "creationDate" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`DROP TABLE "account"`);
        await queryRunner.query(`DROP TABLE "terminal"`);
        await queryRunner.query(`DROP TABLE "physical_card"`);
        await queryRunner.query(`DROP TABLE "user_details"`);
        await queryRunner.query(`ALTER TABLE "transaction" RENAME COLUMN "terminalId" TO "terminalID"`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_ba24fca234735238d1628dfa6c2" FOREIGN KEY ("tradingPointId") REFERENCES "trading_point"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_31307c270942a4468b1ac85cc49" FOREIGN KEY ("ngoId") REFERENCES "ngo"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}
